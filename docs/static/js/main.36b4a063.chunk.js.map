{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","proTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAiBnBG,YAAY,+BAMpBf,EAAYgB,SAAW,CACnBf,cAAegB,IAAUC,KAAKC,Y,mCC9BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,mGAE2EC,UAAUH,IAFrF,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAJW,UAMAA,EAAKC,KAAI,SAACC,GAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAVlB,eAMbY,EANa,yBAaZA,GAbY,4CAAH,sDCEPC,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKP,IACpB,4BAAIA,QCHHQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECD0B,SAACA,GACzB,MAA0BnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAM,SAAAC,GACtBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAER,CAACpB,IAGGqB,EDjBwBM,CAAa3B,GAAjCY,EAAb,EAAQL,KAAaa,EAArB,EAAqBA,QAErB,OACE,qCACE,mCAAMpB,EAAN,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEIJ,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXpBkB,EAAe,WAE1B,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAEA,OACE,gCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACGiD,EAAWrB,KAAI,SAACR,EAAS8B,GAAV,OACf,cAAC,EAAD,CAA0B9B,SAAWA,GAAtBA,YCVxB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.36b4a063.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n        setCategories( cat => [inputValue, ...cat]);\r\n        setinputValue('');\r\n    }\r\n\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Ingrese CategorÃ­a...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.proTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?api_key=1Xs0qExmxixbUpOx5d3ZSU0iZ6WjGixB&limit=10&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = await data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3> {category} </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n      \r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map((img) => (\r\n           <GifGridItem key={img.id} {...img} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then( imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 2000);\r\n        } )   \r\n    }, [category])\r\n\r\n    \r\n    return state; // { data:[], loading:true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n  const [categories, setCategories] = useState([\"One Punch\"])\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category,i) => (\r\n         <GifGrid key={ category } category={ category } />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}